# Define job order
stages:
  - lib-build


# Create library for macos
lib-build-macos:
  stage: lib-build
  tags:
    - osx
  script:
    - git clean -xfd
    - ./autogen.sh
    - ./configure
    - make
    - mkdir release
    - make prefix=$PWD/release install
    - install_name_tool -id @rpath/libsodium.23.dylib $PWD/release/lib/libsodium.dylib
    - make prefix=$HOME/builds/sysroot/usr/local install
    - install_name_tool -id @rpath/libsodium.23.dylib $HOME/builds/sysroot/usr/local/lib/libsodium.dylib
    - cd release
    - tar zcvf ../libsodium.tgz *
    - cd ..
  artifacts:
    paths:
      - libsodium.tgz
    name: "lib-build-macos"
    expire_in: 1 day
  dependencies: []
  only:
    refs:
      - stable
  
  
# Create library for windows
# Library will be build for 4 targets : Debug x86, Debug x64, Release x86, Release x64
lib-build-windows:
  stage: lib-build
  tags:
    - windows
  script:
    - IF (!$env:VS_VERSION_YEAR) { ECHO ">> VS_VERSION_YEAR must be defined on the Runner side <<" ; EXIT 1 }
    - IF (!$env:VS_TOOLS_VERSION) { ECHO ">> VS_TOOLS_VERSION must be defined on the Runner side <<" ; EXIT 1 }
    - IF (!$env:VS_ENV_SETUP) { ECHO ">> VS_ENV_SETUP must be defined on the Runner side <<" ; EXIT 1 }
    # Setup dev env from powershell is a bit tricky. We must use the BAT script then opy all env variables to the powershell session
    - |
        pushd 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build'
        cmd /c "vcvarsall.bat x86 & set" |
        foreach {
          if ($_ -match "=") {
            $v = $_.split("="); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])"
          }
        }
        popd
    - msbuild /m /v:n /p:Configuration=DynDebug /p:Platform=Win32 builds\msvc\vs$env:VS_VERSION_YEAR\libsodium.sln
    - msbuild /m /v:n /p:Configuration=DynRelease /p:Platform=Win32 builds\msvc\vs$env:VS_VERSION_YEAR\libsodium.sln
    # Setup dev env from powershell is a bit tricky. We must use the BAT script then opy all env variables to the powershell session
    - |
        pushd 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build'
        cmd /c "vcvarsall.bat x64 & set" |
        foreach {
          if ($_ -match "=") {
            $v = $_.split("="); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])"
          }
        }
        popd
    - msbuild /m /v:n /p:Configuration=DynDebug /p:Platform=x64 builds\msvc\vs$env:VS_VERSION_YEAR\libsodium.sln
    - msbuild /m /v:n /p:Configuration=DynRelease /p:Platform=x64 builds\msvc\vs$env:VS_VERSION_YEAR\libsodium.sln
    - forfiles /P src\libsodium\include\ /S /C "cmd /c if @isdir==TRUE mkdir %DEPLOYMENT_WINDOWS_NET_SHARE%\Builds\include\\@relpath"
    - forfiles /P src\libsodium\include\ /S /M *.h /C "cmd /c copy /y @path %DEPLOYMENT_WINDOWS_NET_SHARE%\Builds\include\@relpath"
    - copy "bin\Win32\Debug\$env:VS_TOOLS_VERSION\dynamic\*" "$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Debug\x86\" -Force
    - copy "bin\Win32\Debug\$env:VS_TOOLS_VERSION\dynamic\*" "$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Debug\x86\lib\" -Force
    - copy "bin\Win32\Release\$env:VS_TOOLS_VERSION\dynamic\*" "$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Release\x86\" -Force
    - copy "bin\Win32\Release\$env:VS_TOOLS_VERSION\dynamic\*" "$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Release\x86\lib\" -Force
    - copy "bin\x64\Debug\$env:VS_TOOLS_VERSION\dynamic\*" "$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Debug\x64\" -Force
    - copy "bin\x64\Debug\$env:VS_TOOLS_VERSION\dynamic\*" "$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Debug\x64\lib\" -Force
    - copy "bin\x64\Release\$env:VS_TOOLS_VERSION\dynamic\*" "$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Release\x64\" -Force
    - copy "bin\x64\Release\$env:VS_TOOLS_VERSION\dynamic\*" "$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Release\x64\lib\" -Force
  only:
    refs:
      - stable

# Build library for Linux x64
lib-build-linux:
  stage: lib-build
  image: ingescape/debian-testing-compil
  tags:
    - docker
  script:
    - ./autogen.sh
    - ./configure
    - make
    - mkdir release
    - make prefix=$PWD/release install
    - make prefix=$HOME/builds/release/linux_x64/usr/local/ install
    - cd release
    - tar zcvf ../libsodium.tgz *
    - cd ..
  artifacts:
    paths:
      - libsodium.tgz
    name: "lib-linux-release-x64"
    expire_in: 1 day
  dependencies: []
  only:
    refs:
      - stable

# Build library for Linux x64 on CentOS Qt
lib-build-centos-qt:
  stage: lib-build
  tags:
    - centos-qt
  script:
    - ./autogen.sh
    - ./configure
    - make
    - make prefix=/builds/sysroot/usr/local/ install
    - cp -rp /builds/sysroot/usr/local/lib/libsodium* /builds/sysroot/usr/local/lib64
  dependencies: []
  only:
    refs:
      - stable
 
